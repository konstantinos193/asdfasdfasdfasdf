"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/discord/connect/page",{

/***/ "(app-pages-browser)/./app/components/DiscordProfile.tsx":
/*!*******************************************!*\
  !*** ./app/components/DiscordProfile.tsx ***!
  \*******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DiscordProfile; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _contexts_WalletContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../contexts/WalletContext */ \"(app-pages-browser)/./app/contexts/WalletContext.tsx\");\n/* harmony import */ var _contexts_SessionContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../contexts/SessionContext */ \"(app-pages-browser)/./app/contexts/SessionContext.tsx\");\n/* harmony import */ var next_navigation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/navigation */ \"(app-pages-browser)/./node_modules/next/dist/api/navigation.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\nfunction DiscordProfile() {\n    _s();\n    const searchParams = (0,next_navigation__WEBPACK_IMPORTED_MODULE_4__.useSearchParams)();\n    const { connectWallet, signMessage } = (0,_contexts_WalletContext__WEBPACK_IMPORTED_MODULE_2__.useWallet)();\n    const { session, updateSession } = (0,_contexts_SessionContext__WEBPACK_IMPORTED_MODULE_3__.useSession)();\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [status, setStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    // Update initializeSession to handle discordId\n    const initializeSession = async (sessionId, username, discordId)=>{\n        try {\n            const response = await fetch(\"http://localhost:3001/api/discord/webhook\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    sessionId,\n                    username: decodeURIComponent(username),\n                    discordId\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to initialize session\");\n            }\n            const data = await response.json();\n            console.log(\"Session initialized with Discord ID:\", discordId);\n        } catch (error) {\n            console.error(\"Failed to initialize session:\", error);\n            setError(\"Failed to initialize verification. Please try again.\");\n        }\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const params = new URLSearchParams(window.location.search);\n        const sessionId = params.get(\"sessionId\");\n        const username = params.get(\"username\");\n        const discordId = params.get(\"discordId\") // Extract Discord ID from URL\n        ;\n        if (!sessionId || !username || !discordId) {\n            setError(\"Invalid verification link. Please request a new one.\");\n            return;\n        }\n        // Call the initializeSession function with Discord ID\n        initializeSession(sessionId, username, discordId);\n        // Update session state\n        updateSession({\n            id: sessionId,\n            discordId,\n            username: decodeURIComponent(username),\n            isDiscordConnected: true,\n            wallets: [],\n            createdAt: Date.now(),\n            expiresAt: Date.now() + 24 * 60 * 60 * 1000\n        });\n    }, []);\n    // Log session changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        console.log(\"Session updated:\", session);\n    }, [\n        session\n    ]);\n    const handleConnectWallet = async ()=>{\n        try {\n            setIsLoading(true);\n            setError(\"\");\n            setProgress(0);\n            setStatus(\"Connecting wallet...\");\n            const address = await connectWallet();\n            setProgress(30);\n            setStatus(\"Signing verification message...\");\n            const timestamp = Date.now();\n            const message = \"Verify wallet ownership\\nWallet: \".concat(address, \"\\nTimestamp: \").concat(timestamp);\n            const signature = await signMessage(message);\n            setProgress(50);\n            const response = await fetch(\"http://localhost:3001/api/discord/connect/\".concat(session === null || session === void 0 ? void 0 : session.id, \"/wallets\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    address,\n                    signature,\n                    message,\n                    timestamp\n                })\n            });\n            if (!response.ok) {\n                throw new Error(\"Failed to verify wallet ownership\");\n            }\n            const data = await response.json();\n            setProgress(80);\n            updateSession({\n                ...session,\n                wallets: [\n                    ...(session === null || session === void 0 ? void 0 : session.wallets) || [],\n                    {\n                        address,\n                        nftBalance: data.walletInfo.nftBalance || 0,\n                        stakedNFTs: data.walletInfo.stakedNFTs || [],\n                        totalNFTs: data.walletInfo.totalNFTs || 0,\n                        tier: data.walletInfo.tier || 0,\n                        totalPoints: data.walletInfo.totalPoints || 0\n                    }\n                ]\n            });\n            setProgress(100);\n            setStatus(\"Wallet verified!\");\n        } catch (error) {\n            console.error(\"Wallet connection error:\", error);\n            setError(error.message || \"Failed to connect wallet\");\n        } finally{\n            setIsLoading(false);\n            setProgress(0);\n            setStatus(\"\");\n        }\n    };\n    if (!session || !searchParams) {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"flex items-center justify-center min-h-screen\",\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"\n            }, void 0, false, {\n                fileName: \"C:\\\\Users\\\\konst\\\\Desktop\\\\New folder (4)\\\\asdfasdfasdfasdf\\\\app\\\\components\\\\DiscordProfile.tsx\",\n                lineNumber: 141,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"C:\\\\Users\\\\konst\\\\Desktop\\\\New folder (4)\\\\asdfasdfasdfasdf\\\\app\\\\components\\\\DiscordProfile.tsx\",\n            lineNumber: 140,\n            columnNumber: 7\n        }, this);\n    }\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"max-w-2xl mx-auto p-6 space-y-8\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"text-center\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        className: \"text-3xl font-bold mb-2\",\n                        children: \"Wallet Verification\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\konst\\\\Desktop\\\\New folder (4)\\\\asdfasdfasdfasdf\\\\app\\\\components\\\\DiscordProfile.tsx\",\n                        lineNumber: 149,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        className: \"text-muted-foreground\",\n                        children: \"Connect your wallets to verify NFT ownership\"\n                    }, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\konst\\\\Desktop\\\\New folder (4)\\\\asdfasdfasdfasdf\\\\app\\\\components\\\\DiscordProfile.tsx\",\n                        lineNumber: 150,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\konst\\\\Desktop\\\\New folder (4)\\\\asdfasdfasdfasdf\\\\app\\\\components\\\\DiscordProfile.tsx\",\n                lineNumber: 148,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                className: \"text-sm text-muted-foreground text-center\",\n                children: [\n                    \"After connecting your wallets, your Discord roles will be automatically updated.\",\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"br\", {}, void 0, false, {\n                        fileName: \"C:\\\\Users\\\\konst\\\\Desktop\\\\New folder (4)\\\\asdfasdfasdfasdf\\\\app\\\\components\\\\DiscordProfile.tsx\",\n                        lineNumber: 160,\n                        columnNumber: 9\n                    }, this),\n                    \"You can close this window once you've finished adding your wallets.\"\n                ]\n            }, void 0, true, {\n                fileName: \"C:\\\\Users\\\\konst\\\\Desktop\\\\New folder (4)\\\\asdfasdfasdfasdf\\\\app\\\\components\\\\DiscordProfile.tsx\",\n                lineNumber: 158,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"C:\\\\Users\\\\konst\\\\Desktop\\\\New folder (4)\\\\asdfasdfasdfasdf\\\\app\\\\components\\\\DiscordProfile.tsx\",\n        lineNumber: 147,\n        columnNumber: 5\n    }, this);\n}\n_s(DiscordProfile, \"+qoG9kjFmpFexUyCLmol4edfjms=\", false, function() {\n    return [\n        next_navigation__WEBPACK_IMPORTED_MODULE_4__.useSearchParams,\n        _contexts_WalletContext__WEBPACK_IMPORTED_MODULE_2__.useWallet,\n        _contexts_SessionContext__WEBPACK_IMPORTED_MODULE_3__.useSession\n    ];\n});\n_c = DiscordProfile;\nvar _c;\n$RefreshReg$(_c, \"DiscordProfile\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/components/DiscordProfile.tsx\n"));

/***/ })

});